// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241125141034_ssll")]
    partial class ssll
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Catogrey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("displayorder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("catogreys");
                });

            modelBuilder.Entity("WebApplication1.Models.book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookCoverID")
                        .HasColumnType("int");

                    b.Property<int>("BookWritersId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBNNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Trending")
                        .HasColumnType("bit");

                    b.Property<int>("bookWriterID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookCoverID");

                    b.HasIndex("BookWritersId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("WebApplication1.Models.bookCover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bookWriterID")
                        .HasColumnType("int");

                    b.Property<int>("bookWritersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("bookWritersId");

                    b.ToTable("BookCOvers");
                });

            modelBuilder.Entity("WebApplication1.Models.bookWriters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookWriters");
                });

            modelBuilder.Entity("WebApplication1.Models.book", b =>
                {
                    b.HasOne("WebApplication1.Models.bookCover", "bookCover")
                        .WithMany("Books")
                        .HasForeignKey("BookCoverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.bookWriters", "BookWriters")
                        .WithMany("Books")
                        .HasForeignKey("BookWritersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookWriters");

                    b.Navigation("bookCover");
                });

            modelBuilder.Entity("WebApplication1.Models.bookCover", b =>
                {
                    b.HasOne("WebApplication1.Models.bookWriters", "bookWriters")
                        .WithMany("BookCovers")
                        .HasForeignKey("bookWritersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bookWriters");
                });

            modelBuilder.Entity("WebApplication1.Models.bookCover", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("WebApplication1.Models.bookWriters", b =>
                {
                    b.Navigation("BookCovers");

                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
